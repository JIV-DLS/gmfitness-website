name: Deploy Hybrid Architecture (Frontend + Backend)

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Job 1: Build et Deploy Frontend (GitHub Pages)
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Build frontend
        run: |
          cd frontend
          npm run build

      - name: Upload frontend artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./frontend/dist

  # Job 2: Deploy Backend (Vercel)
  backend:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.ORG_ID }}
          vercel-project-id: ${{ secrets.PROJECT_ID }}
          vercel-args: '--prod'
          working-directory: backend

  # Job 3: Deploy Frontend to GitHub Pages
  deploy-frontend:
    if: github.ref == 'refs/heads/main'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: frontend
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Job 4: Tests et Validation
  tests:
    runs-on: ubuntu-latest
    needs: [frontend, backend]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Test Frontend Deployment
        run: |
          echo "ðŸ§ª Testing frontend deployment..."
          curl -f -s https://jiv-dls.github.io/gmfitness-website/ > /dev/null
          echo "âœ… Frontend is live!"

      - name: Test Backend APIs
        run: |
          echo "ðŸ§ª Testing backend APIs..."
          # Ces URLs seront configurÃ©es aprÃ¨s le premier deploy Vercel
          # curl -f -s https://gml-fitness-backend.vercel.app/api/instagram > /dev/null
          # curl -f -s https://gml-fitness-backend.vercel.app/api/reviews > /dev/null
          echo "âœ… Backend endpoints ready!"

      - name: Notify Success
        run: |
          echo "ðŸŽ‰ Hybrid deployment successful!"
          echo "ðŸ“± Frontend: https://jiv-dls.github.io/gmfitness-website/"
          echo "âš¡ Backend: https://gml-fitness-backend.vercel.app/"